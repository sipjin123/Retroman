//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;

namespace Common.Utils {
	/**
	 * A generic pool class.
	 */
	public class Pool<T> where T : new() {

		private readonly SimpleList<T> pooledList; // list of unused instances

		/**
		 * Constructor
		 */
		public Pool() {
			this.pooledList = new SimpleList<T>();
		}

		/**
		 * Requests for an instance
		 */
		public T Request() {
			// check from pooledList
			if(this.pooledList.IsEmpty()) {
				// create a new one
				return new T();
			}

			// get from pool
			// get from end of the list
			T instance = pooledList[pooledList.Count - 1];
			pooledList.RemoveAt(pooledList.Count - 1);
			return instance;
		}

		/**
		 * Returns the instance to the pool
		 */
		public void Return(T instance) {
			// add at the end
			this.pooledList.Add(instance);
		}

	}
}
