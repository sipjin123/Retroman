// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;

using UnityEngine;

using Common.Time;

namespace Common.Fsm.Action {
	/**
	 * Moves along direction that uses position computed by polled time instead of incremented displacement
	 */
	public class MoveAlongDirectionByPolledTime : FsmActionAdapter {
	
		private Transform actor;
		private Vector3 direction;
		private float velocity;
		
		private TimeReference timeReference;
		private float polledTime;
		
		private Vector3 startPosition;
		
		/**
		 * Constructor
		 */
		public MoveAlongDirectionByPolledTime(FsmState owner, string timeReferenceName) : base(owner) {
			this.timeReference = TimeReferencePool.GetInstance().Get(timeReferenceName);
		}
		
		/**
		 * Initializer
		 */
		public void Init(Transform actor, Vector3 direction, float velocity) {
			this.actor = actor;
			this.direction = direction;
			this.velocity = velocity;
        }

		public Vector3 StartPosition {
			get {
				return startPosition;
			}
			set {
				startPosition = value;
			}
		}
        
		public override void OnEnter() {
			Assertion.Assert(!Comparison.TolerantEquals(direction.sqrMagnitude, 0)); // direction should not be zero
			
			// normalize direction
			if(!Comparison.TolerantEquals(this.direction.sqrMagnitude, 1)) {
				this.direction.Normalize();
            }
            
            // reset polled time
            this.polledTime = 0;
        }
        
		public override void OnUpdate() {
			this.polledTime += this.timeReference.DeltaTime;
			Vector3 newPosition = this.startPosition + (this.direction * (this.velocity * this.polledTime));
			this.actor.position = newPosition;
        }
        
    }
}
