//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;

namespace Common.Query {
	public class ConcreteQueryRequest : IQueryRequest {

		private string queryId;
		private Dictionary<string, object> paramMap;

		/**
		 * Constructor
		 */
		public ConcreteQueryRequest() {
			this.paramMap = new Dictionary<string, object>();
		}

		/**
		 * Clears the parameters of the request
		 */
		public void Clear() {
			this.queryId = null;
			paramMap.Clear();
		}

		public string QueryId {
			get {
				return queryId;
			}
			set {
				queryId = value;
			}
		}

		#region IQueryRequest implementation
		public void AddParameter(string paramId, object value) {
			Assertion.Assert(!this.paramMap.ContainsKey(paramId)); // the request should not contain the specified parameter yet
			this.paramMap[paramId] = value;
		}

		public object GetParameter(string paramId) {
			Assertion.Assert(this.paramMap.ContainsKey(paramId)); // the request should contain the specified parameter
			return this.paramMap[paramId];
		}
		#endregion
	}
}
