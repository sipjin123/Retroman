// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;

using UnityEngine;

using Common.Fsm;
using Common.Time;

namespace Common.Fsm.Action {
	public class TimedFadeVolume : FsmActionAdapter {
	
		private AudioSource audioSource;
		private float volumeFrom;
		private float volumeTo;
		private float duration;
		private string finishEvent;
		
		private CountdownTimer timer;
	
		/**
		 * Constructor
		 */
		public TimedFadeVolume(FsmState owner, string timeReferenceName) : base(owner) {
			// dummy time only
			// duration time will be set on enter
			this.timer = new CountdownTimer(1, timeReferenceName);
		}
		
		/**
		 * Initializer
		 * Use this function to change action parameters
		 */
		public void Init(AudioSource audioSource, float volumeFrom, float volumeTo, float duration, string finishEvent) {
			this.audioSource = audioSource;
			this.volumeFrom = volumeFrom;
			this.volumeTo = volumeTo;
			this.duration = duration;
			this.finishEvent = finishEvent;
		}
		
		public override void OnEnter() { 
			this.timer.Reset(this.duration);
			
			this.audioSource.volume = this.volumeFrom;
		}
		
		public override void OnUpdate() {
			this.timer.Update();
			
			if(this.timer.HasElapsed()) {
				Finish();
			}
			
			// interpolate volume
			this.audioSource.volume = Mathf.Lerp(this.volumeFrom, this.volumeTo, this.timer.GetRatio());
		}
		
		private void Finish() {
			// snap to end volume
			this.audioSource.volume = this.volumeTo;
			
			if(!string.IsNullOrEmpty(this.finishEvent)) {
				GetOwner().SendEvent(this.finishEvent);
			}
		}
		
	}
}

